/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/boards/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a Board */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-0"]["createBoard"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-0"]["fullBoardResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/boards/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete a Board by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-0"]["deleteBoardResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/boards/{boardId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    boardId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-0"]["fullBoardResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/boards/all/{orgId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orgId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-0"]["boardsResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/boards/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** @description change board title */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-0"]["updateBoardTitle"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-0"]["fullBoardResponseSchema"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/lists/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-1"]["createList"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["fullListResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lists/order/{boardId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    boardId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-1"]["updateListsOrder"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["fullListsResponseSchema"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lists/{boardId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    boardId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["fullListsResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lists/{id}/board/{board_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    board_id: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["deleteListResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lists/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-1"]["updateListTitle"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["fullListResponseSchema"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/lists/copy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-1"]["copyList"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"]["fullListResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cards/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-2"]["createCard"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-2"]["fullCardResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cards/order/{listId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    boardId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-2"]["updateCardsOrder"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-2"]["fullCardResponseSchema"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Schema */
        "def-0": {
            createBoard: {
                title: string;
                org_id: string;
                image_id: string;
                image_thumb_url: string;
                image_full_url: string;
                image_link_html: string;
                image_username: string;
            };
            fullBoardResponseSchema: {
                id: string;
                title: components["schemas"]["def-0"]["createBoard"]["title"];
                org_id: components["schemas"]["def-0"]["createBoard"]["org_id"];
                image_id: components["schemas"]["def-0"]["createBoard"]["image_id"];
                image_thumb_url: components["schemas"]["def-0"]["createBoard"]["image_thumb_url"];
                image_full_url: components["schemas"]["def-0"]["createBoard"]["image_full_url"];
                image_link_html: components["schemas"]["def-0"]["createBoard"]["image_link_html"];
                image_username: components["schemas"]["def-0"]["createBoard"]["image_username"];
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
            };
            boardsResponseSchema: components["schemas"]["def-0"]["fullBoardResponseSchema"][];
            deleteBoard: {
                id: components["schemas"]["def-0"]["fullBoardResponseSchema"]["id"];
            };
            deleteBoardResponse: {
                id: components["schemas"]["def-0"]["fullBoardResponseSchema"]["id"];
                title: string;
            };
            updateBoardTitle: {
                id: components["schemas"]["def-0"]["fullBoardResponseSchema"]["id"];
                title: components["schemas"]["def-0"]["createBoard"]["title"];
            };
        };
        /** List */
        "def-1": {
            createList: {
                board_id: string;
                title: string;
            };
            updateListTitle: {
                id: string;
                board_id: components["schemas"]["def-1"]["createList"]["board_id"];
                title: components["schemas"]["def-1"]["createList"]["title"];
            };
            fullListResponseSchema: {
                board_id: components["schemas"]["def-1"]["createList"]["board_id"];
                title: components["schemas"]["def-1"]["createList"]["title"];
                order: number;
                id: components["schemas"]["def-1"]["updateListTitle"]["id"];
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
                /** @default [] */
                cards: {
                    id: string;
                    title: string;
                    description: null | string;
                    order: number;
                    list_id: string;
                    /** Format: date-time */
                    created_at: string;
                    /** Format: date-time */
                    updated_at: string;
                }[];
            };
            fullListsResponseSchema: components["schemas"]["def-1"]["fullListResponseSchema"][];
            deleteList: {
                id: components["schemas"]["def-1"]["updateListTitle"]["id"];
                board_id: components["schemas"]["def-1"]["createList"]["board_id"];
            };
            deleteListResponse: {
                id: components["schemas"]["def-1"]["updateListTitle"]["id"];
            };
            copyList: {
                id: components["schemas"]["def-1"]["updateListTitle"]["id"];
                board_id: components["schemas"]["def-1"]["createList"]["board_id"];
            };
            updateListsOrder: {
                id: components["schemas"]["def-1"]["updateListTitle"]["id"];
                board_id: components["schemas"]["def-1"]["createList"]["board_id"];
                order: components["schemas"]["def-1"]["fullListResponseSchema"]["order"];
            }[];
        };
        /** Card */
        "def-2": {
            createCard: {
                list_id: string;
                title: string;
            };
            fullCardResponseSchema: {
                id: string;
                list_id: components["schemas"]["def-2"]["createCard"]["list_id"];
                title: components["schemas"]["def-2"]["createCard"]["title"];
                order: number;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
            };
            updateCardOrder: {
                list_id: components["schemas"]["def-2"]["createCard"]["list_id"];
                id: components["schemas"]["def-2"]["fullCardResponseSchema"]["id"];
                order: components["schemas"]["def-2"]["fullCardResponseSchema"]["order"];
            };
            updateCardsOrder: components["schemas"]["def-2"]["updateCardOrder"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
